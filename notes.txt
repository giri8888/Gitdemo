GIT
Git is the distributed version control system.

At GIT push time if you get any error you can go to windows--> credential manager--> you will see github ---> remove it.

Go to any local folder --> open gitbash from there

git status 
fatal: not a git repository.

git init -----> It will create a new folder .git (Its a hidden folder)
Initialized empty Git repository in E:/Linux/

Now run 
git status ----> no error

Stage the untracked files

git add .   --> all files
git add filename  ----> only particular file is added

GDepu@PC-GDEPU MINGW64 /d/Data_Engineering/Git (main)
$ git add .

GDepu@PC-GDEPU MINGW64 /d/Data_Engineering/Git (main)
$ git status
On branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   class.txt
        new file:   dev.py
        new file:   notes.txt
        new file:   sample_file.txt
		
--Commit the changes

$ git commit -m "First commit"
[main 08d934b] First commit
 4 files changed, 56 insertions(+)
 create mode 100644 dev.py
 create mode 100644 notes.txt
 create mode 100644 sample_file.txt

--Add remote github repository

GDepu@PC-GDEPU MINGW64 /d/Data_Engineering/Git (main)
$ git remote add src https://github.com/giri8888/Gitdemo.git    ---> here src is given by user

$ git remote
origin
src


GDepu@PC-GDEPU MINGW64 /d/Data_Engineering/Git (main)
$ git push -u src main                                      ---> src name of remote git and to main branch.
Enumerating objects: 8, done.
Counting objects: 100% (8/8), done.
Delta compression using up to 8 threads
Compressing objects: 100% (5/5), done.
Writing objects: 100% (6/6), 1.93 KiB | 1.93 MiB/s, done.
Total 6 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/giri8888/Gitdemo.git
   e1a32d7..08d934b  main -> main
branch 'main' set up to track 'src/main'.


---- Add a new file to local and push to github---

$ cat > nextfile.txt
This is our next file.
GDepu@PC-GDEPU MINGW64 /d/Data_Engineering/Git (main)
$ ls -lart
total 24
-rw-r--r-- 1 GDepu 1049089  109 Jan 12  2023 test.py
-rw-r--r-- 1 GDepu 1049089    0 Jan 12  2023 dev.py
-rw-r--r-- 1 GDepu 1049089  551 Jan 12  2023 class.txt
drwxr-xr-x 1 GDepu 1049089    0 Aug 27 11:42 ../
-rw-r--r-- 1 GDepu 1049089   55 Aug 27 17:31 notes.txt
-rw-r--r-- 1 GDepu 1049089 2594 Aug 27 19:12 sample_file.txt
drwxr-xr-x 1 GDepu 1049089    0 Aug 27 19:28 .git/
drwxr-xr-x 1 GDepu 1049089    0 Aug 27 19:33 ./
-rw-r--r-- 1 GDepu 1049089   22 Aug 27 19:33 nextfile.txt


$ git status
On branch main
Your branch is up to date with 'src/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        nextfile.txt

nothing added to commit but untracked files present (use "git add" to track)



$ git add .


$ git commit -m "next commit"
[main 63e84de] next commit
 1 file changed, 1 insertion(+)
 create mode 100644 nextfile.txt

$ git status
On branch main
Your branch is ahead of 'src/main' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean


$ git push -u  src main
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 301 bytes | 301.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/giri8888/Gitdemo.git
   08d934b..63e84de  main -> main
branch 'main' set up to track 'src/main'.

YOu can see the commited files in the Git hub

-- Modify the file:
vi test.py     ---> Add some data and close the file.

$ git status
On branch main
Your branch is up to date with 'src/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   test.py

no changes added to commit (use "git add" and/or "git commit -a")


$ git add .

GDepu@PC-GDEPU MINGW64 /d/Data_Engineering/Git (main)
$ git status
On branch main
Your branch is up to date with 'src/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   test.py


$ git commit -m "modified test.py"
[main 9989832] modified test.py
 1 file changed, 3 insertions(+)


$ git status
On branch main
Your branch is ahead of 'src/main' by 1 commit.
  (use "git push" to publish your local commits)

$ git push -u src main
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 8 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 324 bytes | 324.00 KiB/s, done.
Total 3 (delta 2), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
To https://github.com/giri8888/Gitdemo.git
   63e84de..9989832  main -> main
branch 'main' set up to track 'src/main'.




